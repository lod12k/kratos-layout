// Code generated by protoc-gen-go-http. DO NOT EDIT.

package helloworld

import (
	context "context"
	http "github.com/go-kratos/kratos/v2/transport/http"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the kratos package it is being compiled against.
// context.Context
const _ = http.SupportPackageIsVersion1

type GreeterHTTPServer interface {
	SayHello(context.Context, *HelloRequest) (*HelloReply, error)
}

func RegisterGreeterHTTPServer(s http.ServiceRegistrar, srv GreeterHTTPServer) {
	s.RegisterService(&_HTTP_Greeter_serviceDesc, srv)
}

func _HTTP_Greeter_SayHello(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(HelloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	return srv.(GreeterServer).SayHello(ctx, in)
}

var _HTTP_Greeter_serviceDesc = http.ServiceDesc{
	ServiceName: "helloworld.Greeter",
	HandlerType: (*GreeterHTTPServer)(nil),
	Methods: []http.MethodDesc{

		{
			Path:         "/helloworld",
			Method:       "POST",
			Body:         "",
			ResponseBody: "",
			Handler:      _HTTP_Greeter_SayHello,
		},
	},
	Metadata: "api/helloworld/helloworld.proto",
}
