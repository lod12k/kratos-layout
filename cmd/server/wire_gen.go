// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package main

import (
	"github.com/go-kratos/kratos-layout/internal/biz"
	"github.com/go-kratos/kratos-layout/internal/data"
	"github.com/go-kratos/kratos-layout/internal/server"
	"github.com/go-kratos/kratos-layout/internal/service"
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
)

// Injectors from wire.go:

// InitApp init kratos application.
func InitApp(httpConfig *server.HTTPConfig, grpcConfig *server.GRPCConfig, dbConfig *data.DBConfig, logger log.Logger) (*kratos.App, error) {
	httpServer := server.NewHTTPServer(httpConfig)
	grpcServer := server.NewGRPCServer(grpcConfig)
	dataData, err := data.NewData(dbConfig)
	if err != nil {
		return nil, err
	}
	greeterRepo := data.NewGreeterRepo(dataData, logger)
	greeterUsecase := biz.NewGreeterUsecase(greeterRepo, logger)
	greeterService := service.NewGreeterService(greeterUsecase, logger)
	app := newApp(logger, httpServer, grpcServer, greeterService)
	return app, nil
}
